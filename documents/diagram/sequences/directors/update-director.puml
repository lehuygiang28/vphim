@startuml Update Director Flow

skinparam SequenceMessageAlignment center
skinparam SequenceBoxBackgroundColor white
skinparam SequenceBoxBorderColor black
skinparam NoteBackgroundColor lightyellow
skinparam NoteBorderColor black
skinparam ParticipantBackgroundColor white
skinparam ParticipantBorderColor black

title Update Director Flow (GraphQL)

actor "Admin User" as Admin
participant "GraphQL Server" as GraphQL
participant "Auth Guard" as Auth
participant "Director Resolver" as Resolver
participant "Director Service" as Service
participant "Director Repository" as Repository
database "MongoDB" as DB

Admin -> GraphQL : Mutation updateDirector(input: {_id, name, ...})
activate GraphQL

GraphQL -> Auth : Check user role
activate Auth
Auth --> GraphQL : Validate admin role
deactivate Auth

GraphQL -> Resolver : updateDirector(input)
activate Resolver

Resolver -> Service : updateDirector({_id, name, ...})
activate Service

Service -> Repository : findOneAndUpdateOrThrow(filterQuery, updateQuery)
activate Repository
note right of Repository
  filterQuery: { _id: convertToObjectId(_id) }
  updateQuery: { name, originalName, posterUrl }
end note

Repository -> DB : Find and update director
activate DB
alt director found
    DB --> Repository : Return updated director
else director not found
    DB --> Repository : Return null
end
deactivate DB

alt director found and updated
    Repository --> Service : Return updated director
else director not found
    Repository --> Service : Throw exception
end
deactivate Repository

Service --> Resolver : Return updated director or throw error
deactivate Service

Resolver --> GraphQL : Return DirectorType or error
deactivate Resolver

GraphQL --> Admin : JSON Response or Error
deactivate GraphQL

@enduml 