@startuml Create Director Flow

skinparam SequenceMessageAlignment center
skinparam SequenceBoxBackgroundColor white
skinparam SequenceBoxBorderColor black
skinparam NoteBackgroundColor lightyellow
skinparam NoteBorderColor black
skinparam ParticipantBackgroundColor white
skinparam ParticipantBorderColor black

title Create Director Flow (GraphQL)

actor "Admin User" as adminUser
participant "directorPage:CreateDirector" as directorPage <<Page>>
participant "directorForm:DirectorForm" as directorForm <<Component>>
participant "directorResolver:DirectorResolver" as directorResolver <<Resolver>>
participant "jwtStrategy:JwtGqlStrategy" as jwtStrategy <<Strategy>>
participant "rolesGuard:RolesGuard" as rolesGuard <<Guard>>
participant "directorService:DirectorService" as directorService <<Service>>
participant "directorRepo:DirectorRepository" as directorRepo <<Repository>>
database "MongoDB" as mongoDB

adminUser -> directorPage : Navigate to director creation page
activate directorPage

directorPage -> directorForm : Display form
activate directorForm

adminUser -> directorForm : Fills name, originalName, slug, posterUrl

directorForm -> directorResolver : Mutation createDirector(input: CreateDirectorInput)
activate directorResolver

directorResolver -> jwtStrategy : Validate JWT token
activate jwtStrategy
jwtStrategy --> directorResolver : Return UserJwt
deactivate jwtStrategy

directorResolver -> rolesGuard : Check admin role permissions
activate rolesGuard
rolesGuard --> directorResolver : Validate admin role
deactivate rolesGuard

directorResolver -> directorService : createDirector({name, slug, ...})
activate directorService

directorService -> directorRepo : findOne({filterQuery: {slug}})
activate directorRepo
directorRepo -> mongoDB : Find director by slug
activate mongoDB
mongoDB --> directorRepo : Return director or null
deactivate mongoDB
directorRepo --> directorService : Return existing director or null
deactivate directorRepo

alt slug already exists
    directorService --> directorResolver : Throw BadRequestException\n(Slug already exists)
    directorResolver --> directorForm : Return error
    directorForm --> directorPage : Show error
    directorPage --> adminUser : Show slug already exists error
else slug is unique
    note right of directorService
        Process slug by removing diacritics
        and tones using removeDiacritics()
        and removeTone()
    end note

    directorService -> directorRepo : create({document: {...}})
    activate directorRepo
    directorRepo -> mongoDB : Insert new director document
    activate mongoDB
    mongoDB --> directorRepo : Return created director
    deactivate mongoDB
    directorRepo --> directorService : Return created director
    deactivate directorRepo

    directorService --> directorResolver : Return new director (DirectorType)
    directorResolver --> directorForm : Return DirectorType
    directorForm --> directorPage : Complete form submission
    directorPage --> adminUser : Redirect to director details page
end

deactivate directorService
deactivate directorResolver
deactivate directorForm
deactivate directorPage

@enduml
