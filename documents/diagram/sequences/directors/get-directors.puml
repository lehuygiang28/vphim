@startuml Get Directors Flow

' Stereotypes: <<Component>>, <<Resolver>>, <<Service>>, <<Service>>, <<Repository>>, <<Database>>
participant "DirectorList (Next.js Admin)" as DirectorList <<Component>>
participant "DirectorResolver" as Resolver <<Resolver>>
participant "DirectorService" as Service <<Service>>
participant "RedisService" as Redis <<Service>>
participant "DirectorRepository" as Repository <<Repository>>
database "MongoDB" as DB <<Database>>

DirectorList -> Resolver: query directors(input)
activate Resolver
Resolver -> Service: getDirectors(input)
activate Service
Service -> Redis: get(cacheKey)
activate Redis
Redis --> Service: cache result or null
deactivate Redis
alt cache hit
    Service --> Resolver: cached data
else cache miss
    Service -> Repository: find(filters, query)
    activate Repository
    Repository -> DB: Find directors matching filters
    activate DB
    DB --> Repository: directors
    deactivate DB
    Repository --> Service: directors
    deactivate Repository
    Service -> Repository: count(filters)
    activate Repository
    Repository -> DB: Count directors
    activate DB
    DB --> Repository: count
    deactivate DB
    Repository --> Service: count
    deactivate Repository
    Service -> Redis: set(cacheKey, result, 10s)
    activate Redis
    Redis --> Service: cache set
    deactivate Redis
    Service --> Resolver: { data, total, count }
end
deactivate Service
Resolver --> DirectorList: GetDirectorsOutput
deactivate Resolver

@enduml
