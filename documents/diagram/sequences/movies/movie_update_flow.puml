@startuml Movie Update Flow

actor Client
participant MovieResolver
participant MovieService
participant MovieRepository
participant SearchService
participant ElasticsearchService
database MongoDB
database Elasticsearch

title Movie Update Flow

Client -> MovieResolver: updateMovie(input: UpdateMovieInput)
activate MovieResolver

MovieResolver -> MovieService: updateMovie(input)
activate MovieService

alt input.deletedAt == 'delete'
    MovieService -> MovieRepository: findOneAndUpdate \nfilterQuery: { _id }, \nupdateQuery: { deletedAt: new Date() }
else input.deletedAt == 'restore'
    MovieService -> MovieRepository: findOneAndUpdate \nfilterQuery: { _id }, \nupdateQuery: { deletedAt: null }
else input.deletedAt == undefined
    MovieService -> MovieRepository: findOneAndUpdate \nfilterQuery: { _id }, \nupdateQuery: { ...updateFields }
end

activate MovieRepository
MovieRepository -> MongoDB: findOneAndUpdate document
MongoDB --> MovieRepository: updated document
deactivate MovieRepository

note right of MovieRepository
  MovieSchema.post('findOneAndUpdate') hook triggers
  after document is updated
end note

MovieRepository -> SearchService: indexMovie(document)
activate SearchService

SearchService -> MovieRepository: findOne(movie._id) with populated fields
MovieRepository --> SearchService: fully populated movie document

SearchService -> ElasticsearchService: update(index=movies, id=movie._id, body)
activate ElasticsearchService
ElasticsearchService -> Elasticsearch: update/index document
Elasticsearch --> ElasticsearchService: update result
ElasticsearchService -> Elasticsearch: indices.refresh(index=movies)
Elasticsearch --> ElasticsearchService: refresh result
deactivate ElasticsearchService

SearchService --> MovieRepository: indexing result
deactivate SearchService

alt document not found
    MovieService --> MovieResolver: throw NotFoundException
    MovieResolver --> Client: Error: Movie not found
else document found
    MovieService --> MovieResolver: MovieType instance
    MovieResolver --> Client: MovieType
end

deactivate MovieService
deactivate MovieResolver

@enduml 