@startuml Update Comment Flow

skinparam SequenceMessageAlignment center
skinparam SequenceBoxBackgroundColor white
skinparam SequenceBoxBorderColor black
skinparam NoteBackgroundColor lightyellow
skinparam NoteBorderColor black
skinparam ParticipantBackgroundColor white
skinparam ParticipantBorderColor black

title Update Comment Flow (GraphQL)

actor "User" as user
participant "commentPage:MovieComment" as commentPage <<Component>>
participant "commentResolver:CommentResolver" as commentResolver <<Resolver>>
participant "commentService:CommentService" as commentService <<Service>>
participant "commentsRepo:CommentsRepository" as commentsRepo <<Repository>>
database "mongoDB" as mongoDB

user -> commentPage: Update comment
activate commentPage
commentPage -> commentResolver: Mutation updateComment(input)
activate commentResolver
commentResolver -> commentService: updateComment(input, actor)
activate commentService
commentService -> commentsRepo: findOne({_id, user: actor.userId})
activate commentsRepo
commentsRepo -> mongoDB: Query Comment
mongoDB --> commentsRepo: Comment
commentsRepo --> commentService: comment
deactivate commentsRepo
alt comment not found
    commentService --> commentResolver: HttpException (Not Found)
    commentResolver --> commentPage: Error
else user not authorized
    commentService --> commentResolver: HttpException (Unauthorized)
    commentResolver --> commentPage: Error
else comment found and user authorized
    commentService -> commentsRepo: upsert({_id}, {content, editedAt})
    activate commentsRepo
    commentsRepo -> mongoDB: Update Comment
    mongoDB --> commentsRepo: Updated Comment
    commentsRepo --> commentService: updatedComment
    deactivate commentsRepo
    commentService --> commentResolver: updatedComment
end
deactivate commentService
commentResolver --> commentPage: Updated Comment Data
deactivate commentResolver

@enduml
