@startuml Create Comment Flow

skinparam SequenceMessageAlignment center
skinparam SequenceBoxBackgroundColor white
skinparam SequenceBoxBorderColor black
skinparam NoteBackgroundColor lightyellow
skinparam NoteBorderColor black
skinparam ParticipantBackgroundColor white
skinparam ParticipantBorderColor black

title Create Comment Flow (GraphQL)

actor "User" as user
participant "commentPage:MovieComment" as commentPage <<Component>>
participant "commentResolver:CommentResolver" as commentResolver <<Resolver>>
participant "commentService:CommentService" as commentService <<Service>>
participant "userService:UsersService" as userService <<Service>>
participant "movieService:MovieService" as movieService <<Service>>
participant "commentsRepo:CommentsRepository" as commentsRepo <<Repository>>
database "mongoDB" as mongoDB

user -> commentPage: Submit comment
activate commentPage
commentPage -> commentResolver: Mutation createComment(input)
activate commentResolver
commentResolver -> commentService: createComment(actor, input)
activate commentService
commentService -> userService: findByIdOrThrow(actor.userId)
activate userService
userService --> commentService: user
deactivate userService
commentService -> movieService: getMovie({_id: movieId})
activate movieService
movieService --> commentService: movie
deactivate movieService
alt parentCommentId exists
    commentService -> commentsRepo: findOne({_id: parentCommentId, movie: movie._id})
    activate commentsRepo
    commentsRepo --> commentService: parentComment
    deactivate commentsRepo
    commentService -> commentService: Calculate nestingLevel and rootParentComment
end
commentService -> commentsRepo: create({document})
activate commentsRepo
commentsRepo -> mongoDB: Insert Comment
mongoDB --> commentsRepo: New Comment
commentsRepo --> commentService: newComment
deactivate commentsRepo
alt parentCommentId exists
    commentService -> commentsRepo: findOneAndUpdate(parentComment)
    activate commentsRepo
    commentsRepo -> mongoDB: Increment replyCount
    commentsRepo --> commentService: Updated Parent
    deactivate commentsRepo
    alt rootParentComment exists and different from parent
        commentService -> commentsRepo: findOneAndUpdate(rootParentComment)
        activate commentsRepo
        commentsRepo -> mongoDB: Increment replyCount
        commentsRepo --> commentService: Updated Root Parent
        deactivate commentsRepo
    end
end
commentService --> commentResolver: newComment
deactivate commentService
commentResolver --> commentPage: newComment
deactivate commentResolver

@enduml
