@startuml Create Comment Flow

actor User <<Actor>>
participant "MovieComment (Next.js)" as MovieComment <<Component>>
participant "CommentResolver" as Resolver <<Resolver>>
participant "CommentService" as CommentService <<Service>>
participant "UsersService" as UsersService <<Service>>
participant "MovieService" as MovieService <<Service>>
participant "CommentsRepository" as CommentsRepository <<Repository>>
database "MongoDB" as DB <<Database>>

User -> MovieComment: submit comment
activate MovieComment
MovieComment -> Resolver: mutation createComment(input)
activate Resolver
Resolver -> CommentCommentService: createComment(actor, input)
activate CommentService
CommentService -> UsersCommentService: findByIdOrThrow(actor.userId)
activate UsersService
UsersService --> CommentCommentService: user
deactivate UsersService
CommentService -> MovieCommentService: getMovie({_id: movieId})
activate MovieService
MovieService --> CommentService: movie
deactivate MovieService
alt parentCommentId exists
    CommentService -> CommentsRepository: findOne({_id: parentCommentId, movie: movie._id})
    activate CommentsRepository
    CommentsRepository --> CommentService: parentComment
    deactivate CommentsRepository
    CommentService -> CommentCommentService: Calculate nestingLevel and rootParentComment
end
CommentService -> CommentsRepository: create({document})
activate CommentsRepository
CommentsRepository -> DB: Insert Comment
DB --> CommentsRepository: New Comment
CommentsRepository --> CommentCommentService: newComment
deactivate CommentsRepository
alt parentCommentId exists
    CommentService -> CommentsRepository: findOneAndUpdate(parentComment)
    activate CommentsRepository
    CommentsRepository -> DB: Increment replyCount
    CommentsRepository --> CommentCommentService: Updated Parent
    deactivate CommentsRepository
    alt rootParentComment exists and different from parent
        CommentService -> CommentsRepository: findOneAndUpdate(rootParentComment)
        activate CommentsRepository
        CommentsRepository -> DB: Increment replyCount
        CommentsRepository --> CommentCommentService: Updated Root Parent
        deactivate CommentsRepository
    end
end
CommentService --> Resolver: newComment
deactivate CommentService
Resolver --> MovieComment: newComment
deactivate Resolver

@enduml
