@startuml Region - Update Region

actor User <<Actor>>
participant "RegionComponent (Next.js Admin)" as RegionComponent <<Component>>
participant "RegionResolver" as Resolver <<Resolver>>
participant "RequiredRoles Guard" as Guard <<Service>>
participant "RegionsService" as RegionsService <<Service>>
participant "RegionRepository" as RegionRepository <<Repository>>
database "MongoDB" as MongoDB <<Database>>

User -> RegionComponent: Initiates region update
RegionComponent -> Resolver: mutation updateRegion(input)
activate Resolver

Resolver -> Guard: check admin role
activate Guard
alt user is admin
    Guard --> Resolver: allow
else user is not admin
    Guard --> User: throw ForbiddenException
    deactivate Resolver
    deactivate Guard
end
deactivate Guard

Resolver -> RegionsService: updateRegion(input)
activate Service

Service -> Repo: findOneAndUpdateOrThrow(filterQuery, updateQuery)
activate Repo
Repo -> DB: findOneAndUpdate(query)
activate DB
DB --> Repo: return updated region or null
deactivate DB

alt region found and updated
    Repo --> Service: return updated region
else region not found
    Repo --> Service: throw NotFoundException
end
deactivate Repo

RegionsService --> Resolver: return updated region
deactivate Service
Resolver --> RegionComponent: return updated region
deactivate Resolver

@enduml 