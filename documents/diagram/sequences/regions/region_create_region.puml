@startuml Create Region Flow

skinparam SequenceMessageAlignment center
skinparam SequenceBoxBackgroundColor white
skinparam SequenceBoxBorderColor black
skinparam NoteBackgroundColor lightyellow
skinparam NoteBorderColor black
skinparam ParticipantBackgroundColor white
skinparam ParticipantBorderColor black

title Create Region Flow (GraphQL)

actor "Admin User" as adminUser
participant "regionPage:RegionPage" as regionPage <<Page>>
participant "regionForm:RegionForm" as regionForm <<Component>>
participant "regionResolver:RegionResolver" as regionResolver <<Resolver>>
participant "jwtStrategy:JwtGqlStrategy" as jwtStrategy <<Strategy>>
participant "rolesGuard:RolesGuard" as rolesGuard <<Guard>>
participant "regionService:RegionService" as regionService <<Service>>
participant "regionRepo:RegionRepository" as regionRepo <<Repository>>
database "MongoDB" as mongoDB

adminUser -> regionPage : Navigate to region creation page
activate regionPage

regionPage -> regionForm : Display form
activate regionForm

adminUser -> regionForm : Fills name, slug, ...

regionForm -> regionResolver : Mutation createRegion(input: CreateRegionInput)
activate regionResolver

regionResolver -> jwtStrategy : Validate JWT token
activate jwtStrategy
jwtStrategy --> regionResolver : Return UserJwt
deactivate jwtStrategy

regionResolver -> rolesGuard : Check admin role permissions
activate rolesGuard
rolesGuard --> regionResolver : Validate admin role
    deactivate rolesGuard

regionResolver -> regionService : createRegion({name, slug, ...})
activate regionService

regionService -> regionRepo : findOne({filterQuery: {slug}})
activate regionRepo
regionRepo -> mongoDB : Find region by slug
activate mongoDB
mongoDB --> regionRepo : Return region or null
    deactivate mongoDB
regionRepo --> regionService : Return existing region or null
    deactivate regionRepo

alt slug already exists
    regionService --> regionResolver : Throw BadRequestException\n(Slug already exists)
    regionResolver --> regionForm : Return error
    regionForm --> regionPage : Show error
    regionPage --> adminUser : Show slug already exists error
else slug is unique
    note right of regionService
        Process slug by removing diacritics
        and tones using removeDiacritics()
        and removeTone()
    end note

    regionService -> regionRepo : create({document: {...}})
    activate regionRepo
    regionRepo -> mongoDB : Insert new region document
    activate mongoDB
    mongoDB --> regionRepo : Return created region
    deactivate mongoDB
    regionRepo --> regionService : Return created region
    deactivate regionRepo

    regionService --> regionResolver : Return new region (RegionType)
    regionResolver --> regionForm : Return RegionType
    regionForm --> regionPage : Complete form submission
    regionPage --> adminUser : Redirect to region details page
end

deactivate regionService
deactivate regionResolver
deactivate regionForm
deactivate regionPage

@enduml
