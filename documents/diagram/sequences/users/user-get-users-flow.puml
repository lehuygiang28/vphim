@startuml Get Users Flow

actor "Admin User" as adminUser
participant "UserManagementComponent (Next.js Admin)" as userManagementComponent <<Component>>
participant "UsersResolver" as usersResolver <<Resolver>>
participant "UsersService" as usersService <<Service>>
participant "UsersRepository" as usersRepository <<Repository>>
database "MongoDB" as mongoDB <<Database>>
participant "UsersController" as usersController <<Controller>>

userManagementComponent -> usersController: GET /users?[queryParams]\nGetUsersDto
activate usersController

usersController -> usersService: getUsers({ query })
activate usersService

usersService -> usersService: Build filter query\nbased on parameters

usersService -> usersRepository: find(filterQuery, query)
activate usersRepository
usersRepository -> mongoDB: Query users with filters
mongoDB --> usersRepository: User documents
usersRepository --> usersService: Return users
deactivate usersRepository

usersService -> usersRepository: count(filter)
activate usersRepository
usersRepository -> mongoDB: Count users with filters
mongoDB --> usersRepository: Count result
usersRepository --> usersService: Return total count
deactivate usersRepository

usersService -> usersService: Build GetUsersResponseDto\nwith data and total

usersService --> usersController: Return GetUsersResponseDto
usersController --> userManagementComponent: HTTP 200 OK\nGetUsersResponseDto

deactivate usersService
deactivate usersController

@enduml
