@startuml User Unblock Flow

actor "Admin User" as adminUser
participant "UserPage (Next.js)" as userPage <<Component>>
participant "UsersResolver" as usersResolver <<Resolver>>
participant "UsersService" as usersService <<Service>>
participant "UsersRepository" as usersRepository <<Repository>>
database "MongoDB" as mongoDB <<Database>>
participant "UsersController" as usersController <<Controller>>




userPage -> usersController: PATCH /users/unblock/{id}
activate usersController

usersController -> usersService: unblockUser({ actor, userId })
activate usersService

usersService -> usersService: findByIdOrThrow(actor.userId)
activate usersService #DarkSalmon
usersService -> usersRepository: findOne(actor._id)
usersRepository -> mongoDB: Query user
mongoDB --> usersRepository: User document
usersRepository --> usersService: Return user or null
alt User not found
    usersService --> usersService: Throw UnprocessableEntityException
end
usersService --> usersService: Return actor user
deactivate usersService

alt Actor role is not Admin
    usersService --> usersController: Throw HttpException\n(UNAUTHORIZED)
    usersController --> userPage: HTTP 401 Unauthorized
else Actor is blocked
    usersService --> usersController: Throw HttpException\n(UNPROCESSABLE_ENTITY)
    usersController --> userPage: HTTP 422 Error Response
else Actor is Admin and not blocked
    usersService -> usersService: findByIdOrThrow(userId)
    activate usersService #DarkSalmon
    usersService -> usersRepository: findOne(userId)
    usersRepository -> mongoDB: Query user
    mongoDB --> usersRepository: User document
    usersRepository --> usersService: Return user or null
    alt User not found
        usersService --> usersService: Throw UnprocessableEntityException
    end
    usersService --> usersService: Return target user
    deactivate usersService

    alt Actor is trying to unblock themselves
        usersService --> usersController: Throw HttpException\n(UNPROCESSABLE_ENTITY)
        usersController --> userPage: HTTP 422 Error Response
    else Target user is not blocked
        usersService --> usersController: Throw HttpException\n(UNPROCESSABLE_ENTITY)
        usersController --> userPage: HTTP 422 Error Response
    else Valid unblock request
        usersService -> usersService: Create blockLog with\naction=unblock, timestamp, actor ID

        usersService -> usersRepository: findOneAndUpdate(userId, updateQuery)
        activate usersRepository
        usersRepository -> mongoDB: Update user with isBlocked=false and blockLog
        mongoDB --> usersRepository: Updated user document
        usersRepository --> usersService: Return updated user
        deactivate usersRepository

        usersService --> usersController: Return updated User
        usersController --> userPage: HTTP 200 OK\nUserDto
    end
end

deactivate usersService
deactivate usersController

@enduml
