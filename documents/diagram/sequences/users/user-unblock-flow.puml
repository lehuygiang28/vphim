@startuml User Unblock Flow

actor "Admin Client" as Client
participant "UsersController" as Controller
participant "UsersService" as Service
participant "UsersRepository" as Repository
database "MongoDB" as DB

Client -> Controller: PATCH /users/unblock/{id}
activate Controller

Controller -> Service: unblockUser({ actor, userId })
activate Service

Service -> Service: findByIdOrThrow(actor.userId)
activate Service #DarkSalmon
Service -> Repository: findOne(actor._id)
Repository -> DB: Query user
DB --> Repository: User document
Repository --> Service: Return user or null
alt User not found
    Service --> Service: Throw UnprocessableEntityException
end
Service --> Service: Return actor user
deactivate Service

alt Actor role is not Admin
    Service --> Controller: Throw HttpException\n(UNAUTHORIZED)
    Controller --> Client: HTTP 401 Unauthorized
else Actor is blocked
    Service --> Controller: Throw HttpException\n(UNPROCESSABLE_ENTITY)
    Controller --> Client: HTTP 422 Error Response
else Actor is Admin and not blocked
    Service -> Service: findByIdOrThrow(userId)
    activate Service #DarkSalmon
    Service -> Repository: findOne(userId)
    Repository -> DB: Query user
    DB --> Repository: User document
    Repository --> Service: Return user or null
    alt User not found
        Service --> Service: Throw UnprocessableEntityException
    end
    Service --> Service: Return target user
    deactivate Service
    
    alt Actor is trying to unblock themselves
        Service --> Controller: Throw HttpException\n(UNPROCESSABLE_ENTITY)
        Controller --> Client: HTTP 422 Error Response
    else Target user is not blocked
        Service --> Controller: Throw HttpException\n(UNPROCESSABLE_ENTITY)
        Controller --> Client: HTTP 422 Error Response
    else Valid unblock request
        Service -> Service: Create blockLog with\naction=unblock, timestamp, actor ID
        
        Service -> Repository: findOneAndUpdate(userId, updateQuery)
        activate Repository
        Repository -> DB: Update user with isBlocked=false and blockLog
        DB --> Repository: Updated user document
        Repository --> Service: Return updated user
        deactivate Repository
        
        Service --> Controller: Return updated User
        Controller --> Client: HTTP 200 OK\nUserDto
    end
end

deactivate Service
deactivate Controller

@enduml 