@startuml User Creation Flow

actor "User" as user
participant "UserRegisterComponent (Next.js)" as userRegisterComponent <<Component>>
participant "UsersResolver" as usersResolver <<Resolver>>
participant "UsersService" as usersService <<Service>>
participant "UsersRepository" as usersRepository <<Repository>>
database "MongoDB" as mongoDB <<Database>>
participant "UsersController" as usersController <<Controller>>




userRegisterComponent -> usersController: POST /users\nCreateUserDto
activate usersController

usersController -> usersService: create(createUserDto)
activate usersService

usersService -> usersService: Generate password hash with bcrypt

usersService -> usersRepository: findOne(email)
activate usersRepository
usersRepository -> mongoDB: Query for existing user
mongoDB --> usersRepository: User data or null
usersRepository --> usersService: Return user or null
deactivate usersRepository

alt User with email already exists
    usersService --> usersController: Throw HttpException\n(UNPROCESSABLE_ENTITY)
    usersController --> userRegisterComponent: HTTP 422 Error Response
else Email is unique
    usersService -> usersRepository: create(documentData)
    activate usersRepository
    usersRepository -> mongoDB: Insert new user
    mongoDB --> usersRepository: Created user document
    usersRepository --> usersService: Return user document
    deactivate usersRepository

    usersService --> usersController: Return new User object
    usersController --> userRegisterComponent: HTTP 201 Created\nUserDto
end

deactivate usersService
deactivate usersController

@enduml
