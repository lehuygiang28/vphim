@startuml Create Category Flow

skinparam SequenceMessageAlignment center
skinparam SequenceBoxBackgroundColor white
skinparam SequenceBoxBorderColor black
skinparam NoteBackgroundColor lightyellow
skinparam NoteBorderColor black
skinparam ParticipantBackgroundColor white
skinparam ParticipantBorderColor black

title Create Category Flow (GraphQL)

actor "Admin User" as adminUser
participant "categoryPage:CategoryPage" as categoryPage <<Page>>
participant "categoryForm:CategoryForm" as categoryForm <<Component>>
participant "categoryResolver:CategoryResolver" as categoryResolver <<Resolver>>
participant "jwtStrategy:JwtGqlStrategy" as jwtStrategy <<Strategy>>
participant "rolesGuard:RolesGuard" as rolesGuard <<Guard>>
participant "categoryService:CategoryService" as categoryService <<Service>>
participant "categoryRepo:CategoryRepository" as categoryRepo <<Repository>>
database "mongoDB" as mongoDB

adminUser -> categoryPage : Navigate to category creation page
activate categoryPage

categoryPage -> categoryForm : Display form
activate categoryForm

adminUser -> categoryForm : Fills name, slug, description, etc.

categoryForm -> categoryResolver : Mutation createCategory(input: CreateCategoryInput)
activate categoryResolver

categoryResolver -> jwtStrategy : Validate JWT token
activate jwtStrategy
jwtStrategy --> categoryResolver : Return UserJwt
deactivate jwtStrategy

categoryResolver -> rolesGuard : Check admin role permissions
activate rolesGuard
rolesGuard --> categoryResolver : Validate admin role
    deactivate rolesGuard

categoryResolver -> categoryService : createCategory({name, slug, ...})
activate categoryService

categoryService -> categoryRepo : findOne({filterQuery: {slug}})
activate categoryRepo
categoryRepo -> mongoDB : Find category by slug
activate mongoDB
mongoDB --> categoryRepo : Return category or null
    deactivate mongoDB
categoryRepo --> categoryService : Return existing category or null
    deactivate categoryRepo

alt slug already exists
    categoryService --> categoryResolver : Throw HttpException(UNPROCESSABLE_ENTITY)\n(Slug already exists)
    categoryResolver --> categoryForm : Return error
    categoryForm --> categoryPage : Show error
    categoryPage --> adminUser : Show slug already exists error
else slug is unique
    note right of categoryService
        Process slug by removing diacritics
        and tones using removeDiacritics()
        and removeTone()
    end note

    categoryService -> categoryRepo : create({document: {...}})
    activate categoryRepo
    categoryRepo -> mongoDB : Insert new category document
    activate mongoDB
    mongoDB --> categoryRepo : Return created category
    deactivate mongoDB
    categoryRepo --> categoryService : Return created category
    deactivate categoryRepo

    categoryService --> categoryResolver : Return new category (CategoryType)
    categoryResolver --> categoryForm : Return CategoryType
    categoryForm --> categoryPage : Complete form submission
    categoryPage --> adminUser : Redirect to category details page
end

deactivate categoryService
deactivate categoryResolver
deactivate categoryForm
deactivate categoryPage

@enduml
