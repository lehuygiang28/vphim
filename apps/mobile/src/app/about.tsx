import React from 'react';
import { StyleSheet, ScrollView, View, SafeAreaView, Linking, Image } from 'react-native';
import { Stack, router } from 'expo-router';
import {
    Text,
    TopNavigation,
    TopNavigationAction,
    useTheme,
    Divider,
    Button,
} from '@ui-kitten/components';
import { ArrowLeft, ExternalLink } from 'lucide-react-native';
import { LinearGradient } from 'expo-linear-gradient';

// Helper function to filter out problematic style props from UI Kitten
const filterIconProps = (props: any) => {
    const { style, ...otherProps } = props;
    return otherProps;
};

export default function AboutScreen() {
    const theme = useTheme();

    const handleBack = () => {
        router.back();
    };

    const features = [
        {
            title: 'T√¨m ki·∫øm AI',
            icon: 'ü§ñ',
            description: 'H·ªá th·ªëng t√¨m ki·∫øm th√¥ng minh v·ªõi AI hi·ªÉu ƒë∆∞·ª£c s·ªü th√≠ch c·ªßa b·∫°n.',
        },
        {
            title: 'Ph√°t tr·ª±c tuy·∫øn si√™u nhanh',
            icon: '‚ö°',
            description:
                'Tr·∫£i nghi·ªám xem phim m∆∞·ª£t m√†, ch·∫•t l∆∞·ª£ng cao v·ªõi c√¥ng ngh·ªá ph√°t tr·ª±c tuy·∫øn ti√™n ti·∫øn.',
        },
        {
            title: 'ƒêa n·ªÅn t·∫£ng',
            icon: 'üì±',
            description:
                'S·ª≠ d·ª•ng VePhim tr√™n tr√¨nh duy·ªát ho·∫∑c thi·∫øt b·ªã di ƒë·ªông v·ªõi ·ª©ng d·ª•ng native.',
        },
        {
            title: 'Kh√°m ph√° th√¥ng minh',
            icon: 'üîç',
            description:
                'T√¨m ki·∫øm n·ªôi dung m·ªõi th√¥ng qua g·ª£i √Ω th√¥ng minh d·ª±a tr√™n l·ªãch s·ª≠ xem v√† s·ªü th√≠ch.',
        },
        {
            title: 'B·ªô s∆∞u t·∫≠p c√° nh√¢n',
            icon: 'üíæ',
            description: 'T·∫°o t√†i kho·∫£n mi·ªÖn ph√≠ ƒë·ªÉ l∆∞u phim y√™u th√≠ch, theo d√µi l·ªãch s·ª≠ xem.',
        },
        {
            title: 'Tr·∫£i nghi·ªám s·∫°ch',
            icon: 'üõ°Ô∏è',
            description: 'T·∫≠n h∆∞·ªüng tr·∫£i nghi·ªám kh√¥ng qu·∫£ng c√°o, t·∫≠p trung v√†o n·ªôi dung.',
        },
    ];

    const BackAction = () => (
        <TopNavigationAction
            icon={(props) => <ArrowLeft {...filterIconProps(props)} />}
            onPress={handleBack}
        />
    );

    return (
        <SafeAreaView
            style={[styles.container, { backgroundColor: theme['background-basic-color-1'] }]}
        >
            <Stack.Screen options={{ headerShown: false }} />

            <TopNavigation title="V·ªÅ ·ª©ng d·ª•ng" alignment="center" accessoryLeft={BackAction} />

            <ScrollView style={styles.scrollView}>
                <LinearGradient
                    colors={[theme['color-primary-700'], theme['background-basic-color-1']]}
                    style={styles.header}
                    end={{ x: 0.5, y: 1 }}
                >
                    <Text category="h1" style={styles.appTitle}>
                        VePhim
                    </Text>
                    <Text category="s1" style={styles.appSubtitle}>
                        Xem phim tr·ª±c tuy·∫øn, mi·ªÖn ph√≠ v√† nhanh ch√≥ng
                    </Text>

                    <View style={styles.badgeContainer}>
                        <Image source={require('../../assets/icon.png')} style={styles.appIcon} />
                    </View>

                    <Text category="p2" style={styles.appDescription}>
                        VePhim l√† n·ªÅn t·∫£ng xem phim tr·ª±c tuy·∫øn mi·ªÖn ph√≠ v·ªõi giao di·ªán hi·ªán ƒë·∫°i v√†
                        nhi·ªÅu t√≠nh nƒÉng h·∫•p d·∫´n. Coi VePhim nh∆∞ th∆∞ vi·ªán phim c√° nh√¢n, c√≥ th·ªÉ truy
                        c·∫≠p m·ªçi l√∫c m·ªçi n∆°i mi·ªÖn l√† c√≥ k·∫øt n·ªëi Internet.
                    </Text>
                </LinearGradient>

                <View style={styles.content}>
                    <Text category="h5" style={styles.sectionTitle}>
                        T√≠nh nƒÉng n·ªïi b·∫≠t
                    </Text>

                    <View style={styles.featuresContainer}>
                        {features.map((feature, index) => (
                            <View key={index} style={styles.featureCard}>
                                <Text style={styles.featureIcon}>{feature.icon}</Text>
                                <Text category="h6" style={styles.featureTitle}>
                                    {feature.title}
                                </Text>
                                <Text category="p2" style={styles.featureDescription}>
                                    {feature.description}
                                </Text>
                            </View>
                        ))}
                    </View>

                    <Divider style={styles.divider} />

                    <Text category="h5" style={styles.sectionTitle}>
                        C√¥ng ngh·ªá s·ª≠ d·ª•ng
                    </Text>

                    <View style={styles.techContainer}>
                        <View style={styles.techSection}>
                            <Text category="s1" style={styles.techTitle}>
                                Frontend
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ Next.js & React
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ Ant Design
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ Vidstack (Media Player)
                            </Text>
                        </View>

                        <View style={styles.techSection}>
                            <Text category="s1" style={styles.techTitle}>
                                Backend
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ NestJS
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ MongoDB
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ Redis & Elasticsearch
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ Google Gemini
                            </Text>
                        </View>

                        <View style={styles.techSection}>
                            <Text category="s1" style={styles.techTitle}>
                                Mobile
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ React Native & Expo
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ UI Kitten
                            </Text>
                            <Text category="p2" style={styles.techItem}>
                                ‚Ä¢ Expo Video (Media Player)
                            </Text>
                        </View>
                    </View>

                    <Divider style={styles.divider} />

                    <Text category="h5" style={styles.sectionTitle}>
                        Phi√™n b·∫£n
                    </Text>
                    <Text category="p1" style={styles.versionText}>
                        1.0.0
                    </Text>

                    <Text category="c1" appearance="hint" style={styles.disclaimerText}>
                        VePhim ƒë∆∞·ª£c ph√°t tri·ªÉn ch·ªâ cho m·ª•c ƒë√≠ch gi√°o d·ª•c v√† demo. ·ª®ng d·ª•ng kh√¥ng l∆∞u
                        tr·ªØ b·∫•t k·ª≥ n·ªôi dung phim n√†o tr√™n m√°y ch·ªß c·ªßa m√¨nh. M·ªçi n·ªôi dung ƒë·ªÅu ƒë∆∞·ª£c
                        t·ªïng h·ª£p t·ª´ c√°c ngu·ªìn c√¥ng khai tr√™n Internet.
                    </Text>

                    <View style={styles.footer}>
                        <Text category="c1" appearance="hint" style={styles.copyrightText}>
                            ¬© 2024 VePhim. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
                        </Text>
                        <Button
                            appearance="ghost"
                            size="tiny"
                            status="basic"
                            accessoryLeft={(props) => (
                                <ExternalLink size={14} {...filterIconProps(props)} />
                            )}
                            onPress={() => Linking.openURL('mailto:contact@vephim.online')}
                        >
                            Li√™n h·ªá
                        </Button>
                    </View>
                </View>
            </ScrollView>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    scrollView: {
        flex: 1,
    },
    header: {
        padding: 24,
        alignItems: 'center',
        justifyContent: 'center',
    },
    appTitle: {
        color: 'white',
        fontWeight: 'bold',
        marginBottom: 8,
        textAlign: 'center',
    },
    appSubtitle: {
        color: 'white',
        marginBottom: 24,
        textAlign: 'center',
        opacity: 0.9,
    },
    badgeContainer: {
        flexDirection: 'row',
        justifyContent: 'center',
        flexWrap: 'wrap',
        marginBottom: 24,
    },
    appIcon: {
        width: 120,
        height: 120,
        borderRadius: 24,
    },
    appDescription: {
        color: 'white',
        textAlign: 'center',
        marginBottom: 20,
        lineHeight: 22,
    },
    githubButton: {
        marginTop: 8,
    },
    content: {
        padding: 16,
    },
    sectionTitle: {
        marginBottom: 16,
        marginTop: 8,
    },
    featuresContainer: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        justifyContent: 'space-between',
        marginBottom: 24,
    },
    featureCard: {
        width: '48%',
        backgroundColor: 'rgba(0,0,0,0.03)',
        borderRadius: 12,
        padding: 16,
        marginBottom: 16,
    },
    featureIcon: {
        fontSize: 24,
        marginBottom: 8,
    },
    featureTitle: {
        marginBottom: 8,
        fontSize: 16,
    },
    featureDescription: {
        fontSize: 13,
        lineHeight: 18,
    },
    divider: {
        marginVertical: 24,
    },
    techContainer: {
        marginBottom: 24,
    },
    techSection: {
        marginBottom: 16,
    },
    techTitle: {
        marginBottom: 8,
        fontWeight: 'bold',
    },
    techItem: {
        marginBottom: 4,
        paddingLeft: 8,
    },
    versionText: {
        marginBottom: 24,
    },
    disclaimerText: {
        textAlign: 'center',
        marginBottom: 24,
        lineHeight: 18,
    },
    footer: {
        alignItems: 'center',
        marginBottom: 24,
    },
    copyrightText: {
        marginBottom: 8,
    },
});
